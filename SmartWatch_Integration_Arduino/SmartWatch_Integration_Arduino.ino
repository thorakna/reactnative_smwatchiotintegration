#include <SPI.h> 
#include <Adafruit_GFX.h>
#include <Adafruit_PCD8544.h>
Adafruit_PCD8544 display = Adafruit_PCD8544(7, 6, 5, 4, 3);

String gelenkrktr;

int role1 = 11;
int role2 = 12;

int role1acik = 1;
int role2acik = 1;
int role1sellektor = 0;
int role2sellektor = 0;

int count = 500;
int period = 1000;
int chr = 0;
unsigned long time_now = 0;

static const unsigned char PROGMEM chrono[] =
{ B00000001,B11111111,B11111111,B11111111,B11111111,B00000000,
B00000011,B11111111,B11111111,B11111111,B11111111,B10000000,
B00000011,B11111111,B11111111,B11111111,B11111111,B10000000,
B00000011,B10000000,B00000000,B00000000,B00000011,B10000000,
B00000011,B10000000,B00000000,B00000000,B00000011,B10000000,
B00000001,B11000000,B00000000,B00000000,B00000111,B00000000,
B00000001,B11000000,B00000000,B00000000,B00000111,B00000000,
B00000000,B11100000,B00000000,B00000000,B00001110,B00000000,
B00000000,B11110000,B00000000,B00000000,B00011110,B00000000,
B00000000,B01110000,B00000000,B00000000,B00011100,B00000000,
B00000000,B01111000,B00000000,B00000000,B00111100,B00000000,
B00000000,B00111000,B00000000,B00000000,B00111000,B00000000,
B00000000,B00011100,B00000000,B00000000,B01111000,B00000000,
B00000000,B00011100,B00000000,B00000000,B01110000,B00000000,
B00000000,B00001110,B00000000,B00000000,B11100000,B00000000,
B00000000,B00001111,B00011111,B11110001,B11100000,B00000000,
B00000000,B00000111,B00001111,B11100001,B11000000,B00000000,
B00000000,B00000111,B10001111,B11100011,B11000000,B00000000,
B00000000,B00000011,B10000111,B11000011,B10000000,B00000000,
B00000000,B00000001,B11000111,B11000111,B00000000,B00000000,
B00000000,B00000001,B11000011,B10000111,B00000000,B00000000,
B00000000,B00000000,B11100001,B00001110,B00000000,B00000000,
B00000000,B00000000,B11110001,B00011110,B00000000,B00000000,
B00000000,B00000000,B01110000,B00011100,B00000000,B00000000,
B00000000,B00000000,B01110000,B00011100,B00000000,B00000000,
B00000000,B00000000,B11110001,B00011110,B00000000,B00000000,
B00000000,B00000000,B11100001,B00001110,B00000000,B00000000,
B00000000,B00000001,B11000011,B10001111,B00000000,B00000000,
B00000000,B00000001,B11000111,B11000111,B00000000,B00000000,
B00000000,B00000011,B10000111,B11000011,B10000000,B00000000,
B00000000,B00000111,B10001111,B11100011,B11000000,B00000000,
B00000000,B00000111,B00001111,B11100001,B11000000,B00000000,
B00000000,B00001111,B00011111,B11110001,B11100000,B00000000,
B00000000,B00001110,B00011111,B11110000,B11100000,B00000000,
B00000000,B00011110,B00111111,B11111000,B11110000,B00000000,
B00000000,B00011100,B01111111,B11111100,B01110000,B00000000,
B00000000,B00111000,B01111111,B11111100,B00111000,B00000000,
B00000000,B01111000,B11111111,B11111110,B00111100,B00000000,
B00000000,B01110000,B11111111,B11111110,B00011100,B00000000,
B00000000,B11110001,B11111111,B11111111,B00011110,B00000000,
B00000000,B11100001,B11111111,B11111111,B10001110,B00000000,
B00000001,B11000011,B11111111,B11111111,B10001111,B00000000,
B00000001,B11000000,B00000000,B00000000,B00000111,B00000000,
B00000011,B10000000,B00000000,B00000000,B00000011,B10000000,
B00000011,B10000000,B00000000,B00000000,B00000011,B10000000,
B00000011,B11111111,B11111111,B11111111,B11111111,B10000000,
B00000011,B11111111,B11111111,B11111111,B11111111,B10000000,
B00000001,B11111111,B11111111,B11111111,B11111111,B00000000 };

static const unsigned char PROGMEM chronoyan[] =
{ B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B01111000,B00000000,B00000000,B00000000,B00000000,B00011110,
B11111110,B00000000,B00000000,B00000000,B00000000,B01111111,
B11111111,B10000000,B00000000,B00000000,B00000001,B11111111,
B11100111,B11100000,B00000000,B00000000,B00000111,B11100111,
B11100001,B11110000,B00000000,B00000000,B00001111,B10000111,
B11100000,B11111100,B00000000,B00000000,B00111111,B00000111,
B11100000,B00111111,B00000000,B00000000,B11111100,B00000111,
B11100000,B00001111,B11000000,B00000011,B11110000,B00000111,
B11100010,B00000111,B11100000,B00000111,B11000000,B00000111,
B11100011,B10000001,B11111000,B00011111,B10000000,B00000111,
B11100011,B11100000,B01111110,B01111110,B00000000,B00000111,
B11100011,B11111000,B00011111,B11111000,B00000000,B00000111,
B11100011,B11111100,B00000111,B11100000,B00000000,B00000111,
B11100011,B11111111,B00000011,B11000000,B10000000,B00000111,
B11100011,B11111111,B11000000,B00000011,B10000000,B00000111,
B11100011,B11111111,B11110000,B00001111,B10000000,B00000111,
B11100011,B11111111,B11111000,B00011111,B10000000,B00000111,
B11100011,B11111111,B11111110,B01111111,B10000000,B00000111,
B11100011,B11111111,B11111000,B00011111,B10000000,B00000111,
B11100011,B11111111,B11110000,B00001111,B10000000,B00000111,
B11100011,B11111111,B11000000,B00000011,B10000000,B00000111,
B11100011,B11111111,B00000011,B11000000,B10000000,B00000111,
B11100011,B11111100,B00001111,B11100000,B00000000,B00000111,
B11100011,B11111000,B00011111,B11111000,B00000000,B00000111,
B11100011,B11100000,B01111110,B01111110,B00000000,B00000111,
B11100011,B10000001,B11111000,B00011111,B10000000,B00000111,
B11100011,B00000111,B11100000,B00000111,B11000000,B00000111,
B11100000,B00001111,B11000000,B00000011,B11110000,B00000111,
B11100000,B00111111,B00000000,B00000000,B11111100,B00000111,
B11100000,B11111100,B00000000,B00000000,B00111111,B00000111,
B11100011,B11110000,B00000000,B00000000,B00011111,B10000111,
B11100111,B11100000,B00000000,B00000000,B00000111,B11100111,
B11111111,B10000000,B00000000,B00000000,B00000001,B11111111,
B11111110,B00000000,B00000000,B00000000,B00000000,B01111111,
B01111000,B00000000,B00000000,B00000000,B00000000,B00011110,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000 };

void setup() 
{ 
  Serial.begin(9600);
  display.begin();
  display.setContrast(50);
  display.clearDisplay();
  pinMode(10, OUTPUT);
  digitalWrite(10, HIGH);
  pinMode(role1, OUTPUT);
  pinMode(role2, OUTPUT);
}
void loop()
{
  display.setTextSize(1);
  display.setTextColor(BLACK);
  while(Serial.available()){
    gelenkrktr = Serial.readString();
      if(gelenkrktr.indexOf("merhaba") > -1){
        Serial.print("Merhaba naber :)");
      }else if(gelenkrktr.indexOf("rbirsac") > -1){
        Serial.print("Role1sellektoracik");
        role1sellektor = 1;
      }else if(gelenkrktr.indexOf("rbirskapa") > -1){
        Serial.print("Role1sellektorkapali");
        role1sellektor = 0;
      }else if(gelenkrktr.indexOf("rikisac") > -1){
        Serial.print("Role2sellektoracik");
        role2sellektor = 1;
      }else if(gelenkrktr.indexOf("rikiskapa") > -1){
        Serial.print("Role2sellektorkapali");
        role2sellektor = 0;
      }else if(gelenkrktr.indexOf("rbir") > -1){
        if(role1acik == 0){
          digitalWrite(role1, LOW);
          Serial.print("r1acildi");
          role1acik = 1;
        }else{
          digitalWrite(role1, HIGH);
          Serial.print("r1kapandi");
          role1acik = 0;
        }
      }else if(gelenkrktr.indexOf("riki") > -1){
        if(role2acik == 0){
          digitalWrite(role2, LOW);
          Serial.print("r2acildi");
          role2acik = 1;
        }else{
          digitalWrite(role2, HIGH);
          Serial.print("r2kapandi");
          role2acik = 0;
        }
      }else{
        Serial.print(gelenkrktr + " komutu yok!");
      }
  }
  if(role1sellektor == 1){
      digitalWrite(role1, LOW);
      delay(20);
      digitalWrite(role1, HIGH);
      delay(100);
      digitalWrite(role1, LOW);
      delay(100);
  }
  if(role2sellektor == 1){
      digitalWrite(role2, LOW);
      delay(20);
      digitalWrite(role2, HIGH);
      delay(100);
      digitalWrite(role2, LOW);
      delay(100);
  }
  display.setCursor(0,0);
  display.println(gelenkrktr);
  display.setCursor(0,10);
  display.println(time_now/1000);
  if(millis() >= time_now + period){
        display.clearDisplay();
        time_now += period;

        if(chr == 0){
          chr = 1;
          display.drawBitmap(display.width() - 48, 0, chrono, 48, 48, BLACK);
        }else{
          chr = 0;
          display.drawBitmap(display.width() - 48, 0, chronoyan, 48, 48, BLACK);
        }
        
        display.setTextSize(2);
        count--;
        if(count < 10){
          display.setCursor(10,20);
        }else if(count < 100){
          display.setCursor(5,20);
        }else if(count < 1000){
          display.setCursor(0,20);
        }else if(count < 10000){
          display.setCursor(0,20);
        }
        display.println(count);
  }
  display.display();
}
